<?php

include_once 'include/db_connect.php';
/**
 * Class DBManager.
 * Base class for all the database activities. All the model classes are extending from this class.
 * The connection detail file should be included at the top.
 */
class DBManager{
	protected $host; /**< String value. Holding the path to the DB host.*/
	protected $database; /**< String value. Name of the database that contains the tables.*/
	protected $username; /**< String value. DB username.*/
	protected $pass; /**< String value. DB password.*/
	
	var $error; /**< String value. Containing the DB errors when they accrue. */
	
	protected $connection = null; /**< Mysqli connection. This variable, opens a connection to data base.*/

    /**
     * Default constructor.
     * The constructor reads the connection details from the include file and sets the values:
     * @see database
     * @see username
     * @see host
     */
	function DBManager(){
		$this->database = DATABASE;
		$this->username = USER;
		$this->host = HOST;
		$this->pass = PASSWORD;
		
		return $this->connectDB();
	}

    /**
     * We will set the errors into the variable associated with it.
     * @param $err Error thrown by the mysqli connection
     * @see dbErrorHandler()
     */
	function errorHandler($err){
		$this->error .= $err."\r\n";
	}

    /**
     * The destructor of the class.
     * The MySQL connection will be closed.
     */
	function __destruct(){
        //if (is_object($this->connection))
            //$this->connection->close();
		    //empty($this->connection);
	}

    /**
     * Stores the query execution errors to the variable.
     * @param $err the thrown from the connection.
     * @see executeQuery()
     */
	function dbErrorHandler($err){
		$this->errorHandler($err."\r\n mysqlerror:".mysql_error());
	}

    /**
     * Connect to MySQL database.
     * Using the include file and get the data for connecting to the database.
     * Stores the errors to the error variable.
     * For Farsi support, the utf8 character set will be added to the database.
     * @see dbErrorHandler()
     * @return bool
     */
	function connectDB(){
		$this->connection = new mysqli(HOST, USER, PASSWORD, DATABASE);

        //echo($this->error);
		if(mysqli_connect_error()){
			$this->dbErrorHandler("Database Login Failed...");
			return false;
		}
		$this->connection->query("SET CHARACTER SET utf8;");
		return true;
	}

    /**
     * Executes SQL queries.
     * The queries generated by the child classes will be executed in this function. The query results will be returned.
     * If the query has errors, the error will be stored in the error variable.
     * @param $query the string containing the SQL query.
     * @return bool|mysqliresult false for queries with errors and results for the correct queries.
     */
    function executeQuery($query){
        //print_r($this->connection->connect_error);
        $this->connectDB();
		$result = $this->connection->query($query);
        //print_r($this->connection);

		if (!$result){
			$this->dbErrorHandler("Could not execute query: ".$query."\r\n");
			return false;
		}

        //$this->connection->close();
		return $result;
	}

    /**
     * Change the query execution results to arrays.
     * The result of the executeQuery will be changed to an array with the values of rows in each item.
     * @param $query the query to be executed.
     * @see executeQuery()
     * @return array|bool if no errors, the result array will be returned. For errors returns false.
     */
	function getResultArray($query){
		$res = $this->executeQuery($query);

		if ($res == false || $res == null || !is_a($res,'mysqli_result')){
			return false;
		}
        elseif (mysqli_num_rows($res) <= 0){
            return false;
        }
		$arr = array();
		
		//foreach ($res as $row){
		while ($row = $res->fetch_row()){
			$arr[] = $row;
		}

		return $arr;
	}
}